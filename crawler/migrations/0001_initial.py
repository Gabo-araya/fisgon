# Generated by Django 5.2.4 on 2025-07-25 07:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CrawlSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre descriptivo para esta sesión', max_length=255)),
                ('target_domain', models.CharField(help_text='Dominio objetivo (ej: example.com)', max_length=255)),
                ('target_url', models.URLField(help_text='URL inicial para comenzar el crawling')),
                ('max_depth', models.IntegerField(default=3, help_text='Profundidad máxima de crawling')),
                ('rate_limit', models.FloatField(default=1.0, help_text='Requests por segundo')),
                ('max_pages', models.IntegerField(default=1000, help_text='Máximo número de páginas a crawlear')),
                ('max_file_size', models.IntegerField(default=52428800, help_text='Tamaño máximo de archivo en bytes (50MB)')),
                ('file_types', models.JSONField(blank=True, default=list, help_text='Lista de extensiones de archivo a buscar')),
                ('respect_robots_txt', models.BooleanField(default=True, help_text='Respetar robots.txt')),
                ('follow_redirects', models.BooleanField(default=True, help_text='Seguir redirecciones')),
                ('extract_metadata', models.BooleanField(default=True, help_text='Extraer metadatos de archivos encontrados')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('running', 'Ejecutándose'), ('paused', 'Pausado'), ('completed', 'Completado'), ('failed', 'Fallido'), ('cancelled', 'Cancelado')], default='pending', max_length=20)),
                ('priority', models.IntegerField(choices=[(1, 'Muy Alta'), (2, 'Alta'), (3, 'Normal'), (4, 'Baja'), (5, 'Muy Baja')], default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_urls_discovered', models.IntegerField(default=0)),
                ('total_urls_processed', models.IntegerField(default=0)),
                ('total_files_found', models.IntegerField(default=0)),
                ('total_errors', models.IntegerField(default=0)),
                ('advanced_config', models.JSONField(blank=True, default=dict, help_text='Configuración avanzada adicional')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crawl_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sesión de Crawling',
                'verbose_name_plural': 'Sesiones de Crawling',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CrawlLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], max_length=10)),
                ('message', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='crawler.crawlsession')),
            ],
            options={
                'verbose_name': 'Log de Crawling',
                'verbose_name_plural': 'Logs de Crawling',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='URLQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=2048)),
                ('parent_url', models.URLField(blank=True, help_text='URL desde donde se descubrió esta URL', max_length=2048)),
                ('depth', models.IntegerField(default=0, help_text='Profundidad desde la URL inicial')),
                ('url_type', models.CharField(choices=[('html', 'HTML'), ('pdf', 'PDF'), ('doc', 'Documento Word'), ('docx', 'Documento Word XML'), ('xls', 'Excel'), ('xlsx', 'Excel XML'), ('ppt', 'PowerPoint'), ('pptx', 'PowerPoint XML'), ('jpg', 'JPEG'), ('jpeg', 'JPEG'), ('png', 'PNG'), ('gif', 'GIF'), ('tiff', 'TIFF'), ('mp3', 'MP3'), ('mp4', 'MP4'), ('xml', 'XML'), ('json', 'JSON'), ('other', 'Otro')], default='html', max_length=10)),
                ('file_size', models.IntegerField(blank=True, help_text='Tamaño del archivo en bytes', null=True)),
                ('content_type', models.CharField(blank=True, help_text='Content-Type del response', max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido'), ('skipped', 'Omitido')], default='pending', max_length=20)),
                ('priority', models.IntegerField(default=5, help_text='Prioridad (1=más alta, 5=más baja)')),
                ('retry_count', models.IntegerField(default=0)),
                ('discovered_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('http_status_code', models.IntegerField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Tiempo de respuesta en segundos', null=True)),
                ('error_message', models.TextField(blank=True)),
                ('has_metadata', models.BooleanField(default=False)),
                ('metadata_extracted_at', models.DateTimeField(blank=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url_queue', to='crawler.crawlsession')),
            ],
            options={
                'verbose_name': 'URL en Cola',
                'verbose_name_plural': 'URLs en Cola',
                'ordering': ['priority', 'discovered_at'],
                'unique_together': {('session', 'url')},
            },
        ),
        migrations.CreateModel(
            name='CrawlResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('file_path', models.CharField(blank=True, help_text='Ruta local donde se guardó el archivo', max_length=500)),
                ('file_hash', models.CharField(blank=True, help_text='Hash SHA-256 del archivo', max_length=64)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='crawler.crawlsession')),
                ('url_queue_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='crawler.urlqueue')),
            ],
            options={
                'verbose_name': 'Resultado de Crawling',
                'verbose_name_plural': 'Resultados de Crawling',
                'ordering': ['-created_at'],
            },
        ),
    ]
